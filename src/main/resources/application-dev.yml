spring:
  config:
    activate:
      on-profile: dev
  datasource:
    url: ${POSTGRES_URL:jdbc:postgresql://localhost:5432/my_app}
    username: ${POSTGRES_USER:postgres}
    password: ${POSTGRES_PASSWORD:password}
    jpa:
      properties:
        hibernate:
          dialect: org.hibernate.dialect.PostgreSQLDialect
      show-sql: false
      hibernate:
        ddl-auto: none
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: 1010741604048-bhpi0bqgsc6v0c9f0rlc2o1btpoo0e8q.apps.googleusercontent.com
            client-secret: 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
            scope: profile, email
            redirect-uri: "http://localhost:8080/login/oauth2/code/google"
            authorization-grant-type: authorization_code
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: sub
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}

springdoc:
  api-docs:
    enabled: true
  swagger-ui:
    enabled: true

openapi:
  service:
    api-docs: api-service
    serverUrl: http://localhost:8080
    title: API Document
    version: 1.0.0

jwt:
  expiryHour: 1
  expiryDay: 14
  accessKey: c2VjcmV0QGtleS5hcGlfaGFzX2JlZW5fZGVzaWduZWRfYnlfVGF5TFE=
  refreshKey: 9k1jJAWAKQCnCEz1pwcPNegbHoLugf9hgEnn6sz5pFc=
  resetKey: 2OeEeG48CvIcH1K0UAXbSo/7gPj3QLJ7MnQZuscRirQ=